connection_info:
  user: GITLAB_COM_DB_USER
  pass: GITLAB_COM_DB_PASS
  host: GITLAB_COM_DB_HOST
  database: GITLAB_COM_DB_NAME
  port: PG_PORT
tables:
  issues:
    import_db: GITLAB_DB
    import_query: >
      SELECT id
      , iid
      , title
      , author_id
      , project_id
      , created_at
      , updated_at
      , confidential
      , description
      , milestone_id
      , updated_by_id
      , weight
      , due_date
      , moved_to_id
      , lock_version
      , time_estimate
      , last_edited_at
      , last_edited_by_id
      , discussion_locked
      , closed_at
      , closed_by_id
      , relative_position
      , service_desk_reply_to
      , state_id
      , duplicated_to_id
      , promoted_to_epic_id
      FROM issues
      WHERE updated_at BETWEEN '{EXECUTION_DATE}'::timestamp - interval '{HOURS} hours'
        AND '{EXECUTION_DATE}'::timestamp
    additional_filtering: AND created_at NOT IN ( '0001-01-01 00:00:00+00', '1000-01-01 00:00:00+00', '10000-01-01 00:00:00+00')
    export_schema: 'gitlab_com'
    export_table: 'issues'
    export_table_primary_key: id
  labels:
    import_db: GITLAB_DB
    import_query: >
      SELECT id
      , title
      , color
      , project_id
      , created_at
      , updated_at
      , template
      , type
      , group_id
      FROM labels
      WHERE updated_at BETWEEN '{EXECUTION_DATE}'::timestamp - interval '{HOURS} hours'
        AND '{EXECUTION_DATE}'::timestamp
    export_schema: 'gitlab_com'
    export_table: 'labels'
    export_table_primary_key: id
  issue_metrics:
    import_db: GITLAB_DB
    import_query: >
      SELECT id
      , issue_id
      , first_mentioned_in_commit_at
      , first_associated_with_milestone_at
      , first_added_to_board_at
      , created_at
      , updated_at
      FROM issue_metrics
      WHERE updated_at BETWEEN '{EXECUTION_DATE}'::timestamp - interval '{HOURS} hours'
        AND '{EXECUTION_DATE}'::timestamp
    export_schema: 'gitlab_com'
    export_table: 'issue_metrics'
    export_table_primary_key: id
  label_links:
    import_db: GITLAB_DB
    import_query: >
      SELECT id
      , label_id
      , target_id
      , target_type
      , created_at
      , updated_at
      FROM label_links
    export_schema: 'gitlab_com'
    export_table: 'label_links'
    export_table_primary_key: id
    advanced_metadata: true
  gitlab_subscriptions:
    import_db: GITLAB_DB
    import_query: >
      SELECT id
      , created_at
      , updated_at
      , start_date
      , end_date
      , trial_starts_on
      , trial_ends_on
      , namespace_id
      , hosted_plan_id
      , max_seats_used
      , seats
      , trial
      FROM gitlab_subscriptions
    export_schema: 'gitlab_com'
    export_table: 'gitlab_subscriptions'
    export_table_primary_key: id
    advanced_metadata: true
  namespaces:
    import_db: GITLAB_DB
    import_query: >
      SELECT id
      , name
      , path
      , owner_id
      , created_at
      , updated_at
      , type
      , avatar
      , membership_lock
      , share_with_group_lock
      , visibility_level
      , request_access_enabled
      , ldap_sync_status
      , ldap_sync_error
      , ldap_sync_last_update_at
      , ldap_sync_last_successful_update_at
      , ldap_sync_last_sync_at
      , lfs_enabled
      , parent_id
      , shared_runners_minutes_limit
      , extra_shared_runners_minutes_limit
      , repository_size_limit
      , require_two_factor_authentication
      , two_factor_grace_period
      , project_creation_level
      , auto_devops_enabled
      FROM namespaces
      WHERE updated_at BETWEEN '{EXECUTION_DATE}'::timestamp - interval '{HOURS} hours'
        AND '{EXECUTION_DATE}'::timestamp
    export_schema: 'gitlab_com'
    export_table: 'namespaces'
    export_table_primary_key: id
  projects:
    import_db: GITLAB_DB
    import_query: >
      SELECT id
      , name
      , path
      , description
      , created_at
      , updated_at
      , creator_id
      , namespace_id
      , last_activity_at
      , import_url
      , visibility_level
      , archived
      , avatar
      , merge_requests_template
      , star_count
      , merge_requests_rebase_enabled
      , import_type
      , import_source
      , approvals_before_merge
      , reset_approvals_on_push
      , merge_requests_ff_only_enabled
      , issues_template
      , mirror
      , mirror_user_id
      , shared_runners_enabled
      , build_coverage_regex
      , build_allow_git_fetch
      , build_timeout
      , mirror_trigger_builds
      , pending_delete
      , public_builds
      , last_repository_check_failed
      , last_repository_check_at
      , container_registry_enabled
      , only_allow_merge_if_pipeline_succeeds
      , has_external_issue_tracker
      , repository_storage
      , repository_read_only
      , request_access_enabled
      , has_external_wiki
      , ci_config_path
      , lfs_enabled
      , only_allow_merge_if_all_discussions_are_resolved
      , repository_size_limit
      , printing_merge_request_link_enabled
      , auto_cancel_pending_pipelines
      , service_desk_enabled
      , delete_error
      , last_repository_updated_at
      , disable_overriding_approvers_per_merge_request
      , storage_version
      , resolve_outdated_diff_discussions
      , remote_mirror_available_overridden
      , only_mirror_protected_branches
      , pull_mirror_available_overridden
      , mirror_overwrites_diverged_branches
      , external_authorization_classification_label
      FROM projects
      WHERE updated_at BETWEEN '{EXECUTION_DATE}'::timestamp - interval '{HOURS} hours'
        AND '{EXECUTION_DATE}'::timestamp
    export_schema: 'gitlab_com'
    export_table: 'projects'
    export_table_primary_key: id
  plans:
    import_db: GITLAB_DB
    import_query: >
      SELECT id
      , created_at
      , updated_at
      , name
      , title
      FROM plans
    export_schema: 'gitlab_com'
    export_table: 'plans'
    export_table_primary_key: id