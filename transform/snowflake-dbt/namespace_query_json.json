{"active_user_count": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(users.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_users_dedupe_source AS users  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (users.state IN ('active')) AND (users.user_type IS NULL OR users.user_type IN (NULL, 6, 4)) GROUP BY 1", "counts.boards": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(boards.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_boards_dedupe_source AS boards LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = boards.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.ci_builds": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_builds.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' GROUP BY 1", "counts.ci_internal_pipelines": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_pipelines.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source AS ci_pipelines  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipelines.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (ci_pipelines.source IN (1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13) OR ci_pipelines.source IS NULL) GROUP BY 1", "counts.ci_external_pipelines": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_pipelines.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source AS ci_pipelines  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipelines.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_pipelines.source = 6 GROUP BY 1", "counts.ci_pipeline_config_auto_devops": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_pipelines.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source AS ci_pipelines  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipelines.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_pipelines.config_source = 2 GROUP BY 1", "counts.ci_pipeline_config_repository": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_pipelines.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source AS ci_pipelines  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipelines.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_pipelines.config_source = 1 GROUP BY 1", "counts.ci_triggers": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_triggers.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_triggers_dedupe_source AS ci_triggers LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_triggers.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.ci_pipeline_schedules": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_pipeline_schedules.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipeline_schedules_dedupe_source AS ci_pipeline_schedules LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipeline_schedules.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.auto_devops_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(project_auto_devops.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_project_auto_devops_dedupe_source AS project_auto_devops  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = project_auto_devops.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE project_auto_devops.enabled = TRUE GROUP BY 1", "counts.auto_devops_disabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(project_auto_devops.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_project_auto_devops_dedupe_source AS project_auto_devops  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = project_auto_devops.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE project_auto_devops.enabled = FALSE GROUP BY 1", "counts.deployments": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(deployments.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_deployments_dedupe_source AS deployments LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = deployments.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.successful_deployments": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(deployments.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_deployments_dedupe_source AS deployments  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = deployments.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE deployments.status = 2 GROUP BY 1", "counts.failed_deployments": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(deployments.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_deployments_dedupe_source AS deployments  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = deployments.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE deployments.status = 3 GROUP BY 1", "counts.environments": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(environments.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_environments_dedupe_source AS environments LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = environments.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.clusters": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(clusters.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.clusters_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(clusters.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = TRUE GROUP BY 1", "counts.project_clusters_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(clusters.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = TRUE AND clusters.cluster_type = 3 GROUP BY 1", "counts.group_clusters_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(clusters.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = TRUE AND clusters.cluster_type = 2 GROUP BY 1", "counts.instance_clusters_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(clusters.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = TRUE AND clusters.cluster_type = 1 GROUP BY 1", "counts.clusters_disabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(clusters.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = FALSE GROUP BY 1", "counts.project_clusters_disabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(clusters.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = FALSE AND clusters.cluster_type = 3 GROUP BY 1", "counts.group_clusters_disabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(clusters.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = FALSE AND clusters.cluster_type = 2 GROUP BY 1", "counts.instance_clusters_disabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(clusters.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = FALSE AND clusters.cluster_type = 1 GROUP BY 1", "counts.clusters_platforms_eks": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(clusters.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_cluster_providers_aws_dedupe_source AS cluster_providers_aws ON cluster_providers_aws.cluster_id = clusters.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.provider_type = 2 AND (cluster_providers_aws.status IN (3)) AND clusters.enabled = TRUE GROUP BY 1", "counts.clusters_platforms_gke": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(clusters.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_cluster_providers_gcp_dedupe_source AS cluster_providers_gcp ON cluster_providers_gcp.cluster_id = clusters.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.provider_type = 1 AND (cluster_providers_gcp.status IN (3)) AND clusters.enabled = TRUE GROUP BY 1", "counts.clusters_platforms_user": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(clusters.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.provider_type = 0 AND clusters.enabled = TRUE GROUP BY 1", "counts.clusters_management_project": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(clusters.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.management_project_id IS NOT NULL GROUP BY 1", "counts.kubernetes_agents": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(cluster_agents.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_cluster_agents_dedupe_source AS cluster_agents LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = cluster_agents.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.in_review_folder": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(environments.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_environments_dedupe_source AS environments  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = environments.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE environments.environment_type = 'review' GROUP BY 1", "counts.grafana_integrated_projects": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(grafana_integrations.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_grafana_integrations_dedupe_source AS grafana_integrations  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = grafana_integrations.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE grafana_integrations.enabled = TRUE GROUP BY 1", "counts.groups": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(namespaces.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE namespaces.type = 'Group' GROUP BY 1", "counts.issues": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(issues.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.issues_with_associated_zoom_link": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(zoom_meetings.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_zoom_meetings_dedupe_source AS zoom_meetings  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = zoom_meetings.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE zoom_meetings.issue_status = 1 GROUP BY 1", "counts.issues_using_zoom_quick_actions": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT zoom_meetings.issue_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_zoom_meetings_dedupe_source AS zoom_meetings LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = zoom_meetings.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.issues_with_embedded_grafana_charts_approx": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(issues.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues JOIN prep.gitlab_dotcom.gitlab_dotcom_grafana_integrations_dedupe_source AS grafana_integrations USING (project_id)  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (issues.description LIKE '%' || grafana_integrations.grafana_url || '%') AND grafana_integrations.enabled = TRUE GROUP BY 1", "counts.issues_created_from_alerts": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(issues.id) FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_alert_management_alerts_dedupe_source AS alert_management_alerts ON alert_management_alerts.issue_id = issues.idSELECT COUNT(issues.id) FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_issues_self_managed_prometheus_alert_events_dedupe_source AS issues_self_managed_prometheus_alert_events ON issues_self_managed_prometheus_alert_events.issue_id = issues.idSELECT COUNT(issues.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_issues_prometheus_alert_events_dedupe_source AS issues_prometheus_alert_events ON issues_prometheus_alert_events.issue_id = issues.id LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.issues_created_gitlab_alerts": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(issues.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_alert_management_alerts_dedupe_source AS alert_management_alerts ON alert_management_alerts.issue_id = issues.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE issues.author_id != 81 GROUP BY 1", "counts.issues_created_manually_from_alerts": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(issues.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_alert_management_alerts_dedupe_source AS alert_management_alerts ON alert_management_alerts.issue_id = issues.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE issues.author_id != 81 GROUP BY 1", "counts.incident_issues": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(issues.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE issues.issue_type = 1 GROUP BY 1", "counts.alert_bot_incident_issues": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(issues.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE issues.author_id = 81 GROUP BY 1", "counts.incident_labeled_issues": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(issues.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_label_links_dedupe_source AS label_links ON label_links.target_type = 'Issue' AND label_links.target_id = issues.id INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_labels_dedupe_source AS labels ON labels.id = label_links.label_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE labels.title = 'incident' AND labels.color = '#CC0033' AND labels.description = 'Denotes a disruption to IT services and the associated issues require immediate attention' GROUP BY 1", "counts.milestones": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(milestones.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_milestones_dedupe_source AS milestones LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = milestones.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.projects_with_packages": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT packages_packages.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_packages_packages_dedupe_source AS packages_packages LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = packages_packages.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.packages": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(packages_packages.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_packages_packages_dedupe_source AS packages_packages LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = packages_packages.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.pages_domains": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(pages_domains.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_pages_domains_dedupe_source AS pages_domains LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = pages_domains.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.pool_repositories": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(pool_repositories.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_pool_repositories_dedupe_source AS pool_repositories LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = pool_repositories.source_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.projects": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.projects_creating_incidents": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT issues.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE issues.issue_type = 1 GROUP BY 1", "counts.projects_imported_from_github": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'github' GROUP BY 1", "counts.projects_with_repositories_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(project_features.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_project_features_dedupe_source AS project_features  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = project_features.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (repository_access_level > 0) GROUP BY 1", "counts.projects_with_tracing_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(project_tracing_settings.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_project_tracing_settings_dedupe_source AS project_tracing_settings LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = project_tracing_settings.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.projects_with_error_tracking_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(project_error_tracking_settings.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_project_error_tracking_settings_dedupe_source AS project_error_tracking_settings  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = project_error_tracking_settings.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE project_error_tracking_settings.enabled = TRUE GROUP BY 1", "counts.projects_with_alerts_service_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.type = 'AlertsService' AND services.active = TRUE GROUP BY 1", "counts.projects_with_alerts_created": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT alert_management_alerts.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_alert_management_alerts_dedupe_source AS alert_management_alerts LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = alert_management_alerts.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.projects_with_enabled_alert_integrations": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT alert_management_http_integrations.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_alert_management_http_integrations_dedupe_source AS alert_management_http_integrations  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = alert_management_http_integrations.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE alert_management_http_integrations.active = TRUE GROUP BY 1", "counts.projects_with_prometheus_alerts": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT prometheus_alerts.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_prometheus_alerts_dedupe_source AS prometheus_alerts LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = prometheus_alerts.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.projects_with_terraform_reports": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_job_artifacts.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_job_artifacts_dedupe_source AS ci_job_artifacts  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_job_artifacts.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_job_artifacts.file_type = 18 GROUP BY 1", "counts.projects_with_terraform_states": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT terraform_states.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_terraform_states_dedupe_source AS terraform_states LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = terraform_states.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.protected_branches": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(protected_branches.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_protected_branches_dedupe_source AS protected_branches LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = protected_branches.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.protected_branches_except_default": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(protected_branches.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_protected_branches_dedupe_source AS protected_branches  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = protected_branches.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE NOT ((protected_branches.name IN ('main', 'master') OR protected_branches.name IS NULL)) GROUP BY 1", "counts.releases": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(releases.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_releases_dedupe_source AS releases LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = releases.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.remote_mirrors": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(remote_mirrors.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_remote_mirrors_dedupe_source AS remote_mirrors LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = remote_mirrors.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.personal_snippets": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(snippets.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_snippets_dedupe_source AS snippets  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = snippets.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE snippets.type = 'PersonalSnippet' GROUP BY 1", "counts.project_snippets": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(snippets.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_snippets_dedupe_source AS snippets  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = snippets.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE snippets.type = 'ProjectSnippet' GROUP BY 1", "counts.terraform_reports": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_job_artifacts.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_job_artifacts_dedupe_source AS ci_job_artifacts  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_job_artifacts.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_job_artifacts.file_type = 18 GROUP BY 1", "counts.terraform_states": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(terraform_states.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_terraform_states_dedupe_source AS terraform_states LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = terraform_states.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.todos": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(todos.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_todos_dedupe_source AS todos LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = todos.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.web_hooks": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(web_hooks.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_web_hooks_dedupe_source AS web_hooks LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = web_hooks.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.merge_requests": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(merge_requests.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_merge_requests_dedupe_source AS merge_requests LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = merge_requests.target_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.notes": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(notes.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_notes_dedupe_source AS notes LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = notes.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.projects_asana_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'AsanaService' GROUP BY 1", "counts.groups_asana_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'AsanaService' GROUP BY 1", "counts.templates_asana_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'AsanaService' GROUP BY 1", "counts.instances_asana_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'AsanaService' GROUP BY 1", "counts.projects_inheriting_asana_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'AsanaService' GROUP BY 1", "counts.groups_inheriting_asana_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'AsanaService' GROUP BY 1", "counts.projects_assembla_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'AssemblaService' GROUP BY 1", "counts.groups_assembla_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'AssemblaService' GROUP BY 1", "counts.templates_assembla_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'AssemblaService' GROUP BY 1", "counts.instances_assembla_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'AssemblaService' GROUP BY 1", "counts.projects_inheriting_assembla_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'AssemblaService' GROUP BY 1", "counts.groups_inheriting_assembla_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'AssemblaService' GROUP BY 1", "counts.projects_bamboo_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'BambooService' GROUP BY 1", "counts.groups_bamboo_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'BambooService' GROUP BY 1", "counts.templates_bamboo_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'BambooService' GROUP BY 1", "counts.instances_bamboo_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'BambooService' GROUP BY 1", "counts.projects_inheriting_bamboo_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'BambooService' GROUP BY 1", "counts.groups_inheriting_bamboo_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'BambooService' GROUP BY 1", "counts.projects_bugzilla_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'BugzillaService' GROUP BY 1", "counts.groups_bugzilla_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'BugzillaService' GROUP BY 1", "counts.templates_bugzilla_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'BugzillaService' GROUP BY 1", "counts.instances_bugzilla_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'BugzillaService' GROUP BY 1", "counts.projects_inheriting_bugzilla_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'BugzillaService' GROUP BY 1", "counts.groups_inheriting_bugzilla_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'BugzillaService' GROUP BY 1", "counts.projects_buildkite_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'BuildkiteService' GROUP BY 1", "counts.groups_buildkite_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'BuildkiteService' GROUP BY 1", "counts.templates_buildkite_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'BuildkiteService' GROUP BY 1", "counts.instances_buildkite_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'BuildkiteService' GROUP BY 1", "counts.projects_inheriting_buildkite_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'BuildkiteService' GROUP BY 1", "counts.groups_inheriting_buildkite_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'BuildkiteService' GROUP BY 1", "counts.projects_campfire_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'CampfireService' GROUP BY 1", "counts.groups_campfire_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'CampfireService' GROUP BY 1", "counts.templates_campfire_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'CampfireService' GROUP BY 1", "counts.instances_campfire_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'CampfireService' GROUP BY 1", "counts.projects_inheriting_campfire_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'CampfireService' GROUP BY 1", "counts.groups_inheriting_campfire_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'CampfireService' GROUP BY 1", "counts.projects_confluence_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'ConfluenceService' GROUP BY 1", "counts.groups_confluence_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'ConfluenceService' GROUP BY 1", "counts.templates_confluence_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'ConfluenceService' GROUP BY 1", "counts.instances_confluence_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'ConfluenceService' GROUP BY 1", "counts.projects_inheriting_confluence_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'ConfluenceService' GROUP BY 1", "counts.groups_inheriting_confluence_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'ConfluenceService' GROUP BY 1", "counts.projects_custom_issue_tracker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'CustomIssueTrackerService' GROUP BY 1", "counts.groups_custom_issue_tracker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'CustomIssueTrackerService' GROUP BY 1", "counts.templates_custom_issue_tracker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'CustomIssueTrackerService' GROUP BY 1", "counts.instances_custom_issue_tracker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'CustomIssueTrackerService' GROUP BY 1", "counts.projects_inheriting_custom_issue_tracker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'CustomIssueTrackerService' GROUP BY 1", "counts.groups_inheriting_custom_issue_tracker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'CustomIssueTrackerService' GROUP BY 1", "counts.projects_datadog_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'DatadogService' GROUP BY 1", "counts.groups_datadog_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'DatadogService' GROUP BY 1", "counts.templates_datadog_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'DatadogService' GROUP BY 1", "counts.instances_datadog_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'DatadogService' GROUP BY 1", "counts.projects_inheriting_datadog_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'DatadogService' GROUP BY 1", "counts.groups_inheriting_datadog_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'DatadogService' GROUP BY 1", "counts.projects_discord_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'DiscordService' GROUP BY 1", "counts.groups_discord_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'DiscordService' GROUP BY 1", "counts.templates_discord_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'DiscordService' GROUP BY 1", "counts.instances_discord_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'DiscordService' GROUP BY 1", "counts.projects_inheriting_discord_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'DiscordService' GROUP BY 1", "counts.groups_inheriting_discord_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'DiscordService' GROUP BY 1", "counts.projects_drone_ci_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'DroneCiService' GROUP BY 1", "counts.groups_drone_ci_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'DroneCiService' GROUP BY 1", "counts.templates_drone_ci_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'DroneCiService' GROUP BY 1", "counts.instances_drone_ci_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'DroneCiService' GROUP BY 1", "counts.projects_inheriting_drone_ci_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'DroneCiService' GROUP BY 1", "counts.groups_inheriting_drone_ci_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'DroneCiService' GROUP BY 1", "counts.projects_emails_on_push_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'EmailsOnPushService' GROUP BY 1", "counts.groups_emails_on_push_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'EmailsOnPushService' GROUP BY 1", "counts.templates_emails_on_push_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'EmailsOnPushService' GROUP BY 1", "counts.instances_emails_on_push_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'EmailsOnPushService' GROUP BY 1", "counts.projects_inheriting_emails_on_push_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'EmailsOnPushService' GROUP BY 1", "counts.groups_inheriting_emails_on_push_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'EmailsOnPushService' GROUP BY 1", "counts.projects_ewm_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'EwmService' GROUP BY 1", "counts.groups_ewm_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'EwmService' GROUP BY 1", "counts.templates_ewm_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'EwmService' GROUP BY 1", "counts.instances_ewm_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'EwmService' GROUP BY 1", "counts.projects_inheriting_ewm_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'EwmService' GROUP BY 1", "counts.groups_inheriting_ewm_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'EwmService' GROUP BY 1", "counts.projects_external_wiki_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'ExternalWikiService' GROUP BY 1", "counts.groups_external_wiki_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'ExternalWikiService' GROUP BY 1", "counts.templates_external_wiki_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'ExternalWikiService' GROUP BY 1", "counts.instances_external_wiki_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'ExternalWikiService' GROUP BY 1", "counts.projects_inheriting_external_wiki_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'ExternalWikiService' GROUP BY 1", "counts.groups_inheriting_external_wiki_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'ExternalWikiService' GROUP BY 1", "counts.projects_flowdock_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'FlowdockService' GROUP BY 1", "counts.groups_flowdock_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'FlowdockService' GROUP BY 1", "counts.templates_flowdock_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'FlowdockService' GROUP BY 1", "counts.instances_flowdock_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'FlowdockService' GROUP BY 1", "counts.projects_inheriting_flowdock_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'FlowdockService' GROUP BY 1", "counts.groups_inheriting_flowdock_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'FlowdockService' GROUP BY 1", "counts.projects_github_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'GithubService' GROUP BY 1", "counts.groups_github_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'GithubService' GROUP BY 1", "counts.templates_github_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'GithubService' GROUP BY 1", "counts.instances_github_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'GithubService' GROUP BY 1", "counts.projects_inheriting_github_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'GithubService' GROUP BY 1", "counts.groups_inheriting_github_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'GithubService' GROUP BY 1", "counts.projects_hangouts_chat_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'HangoutsChatService' GROUP BY 1", "counts.groups_hangouts_chat_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'HangoutsChatService' GROUP BY 1", "counts.templates_hangouts_chat_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'HangoutsChatService' GROUP BY 1", "counts.instances_hangouts_chat_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'HangoutsChatService' GROUP BY 1", "counts.projects_inheriting_hangouts_chat_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'HangoutsChatService' GROUP BY 1", "counts.groups_inheriting_hangouts_chat_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'HangoutsChatService' GROUP BY 1", "counts.projects_hipchat_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'HipchatService' GROUP BY 1", "counts.groups_hipchat_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'HipchatService' GROUP BY 1", "counts.templates_hipchat_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'HipchatService' GROUP BY 1", "counts.instances_hipchat_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'HipchatService' GROUP BY 1", "counts.projects_inheriting_hipchat_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'HipchatService' GROUP BY 1", "counts.groups_inheriting_hipchat_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'HipchatService' GROUP BY 1", "counts.projects_irker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'IrkerService' GROUP BY 1", "counts.groups_irker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'IrkerService' GROUP BY 1", "counts.templates_irker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'IrkerService' GROUP BY 1", "counts.instances_irker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'IrkerService' GROUP BY 1", "counts.projects_inheriting_irker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'IrkerService' GROUP BY 1", "counts.groups_inheriting_irker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'IrkerService' GROUP BY 1", "counts.projects_jenkins_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'JenkinsService' GROUP BY 1", "counts.groups_jenkins_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'JenkinsService' GROUP BY 1", "counts.templates_jenkins_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'JenkinsService' GROUP BY 1", "counts.instances_jenkins_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'JenkinsService' GROUP BY 1", "counts.projects_inheriting_jenkins_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'JenkinsService' GROUP BY 1", "counts.groups_inheriting_jenkins_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'JenkinsService' GROUP BY 1", "counts.projects_jira_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'JiraService' GROUP BY 1", "counts.groups_jira_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'JiraService' GROUP BY 1", "counts.templates_jira_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'JiraService' GROUP BY 1", "counts.instances_jira_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'JiraService' GROUP BY 1", "counts.projects_inheriting_jira_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'JiraService' GROUP BY 1", "counts.groups_inheriting_jira_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'JiraService' GROUP BY 1", "counts.projects_mattermost_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'MattermostService' GROUP BY 1", "counts.groups_mattermost_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'MattermostService' GROUP BY 1", "counts.templates_mattermost_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'MattermostService' GROUP BY 1", "counts.instances_mattermost_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'MattermostService' GROUP BY 1", "counts.projects_inheriting_mattermost_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'MattermostService' GROUP BY 1", "counts.groups_inheriting_mattermost_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'MattermostService' GROUP BY 1", "counts.projects_mattermost_slash_commands_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'MattermostSlashCommandsService' GROUP BY 1", "counts.groups_mattermost_slash_commands_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'MattermostSlashCommandsService' GROUP BY 1", "counts.templates_mattermost_slash_commands_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'MattermostSlashCommandsService' GROUP BY 1", "counts.instances_mattermost_slash_commands_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'MattermostSlashCommandsService' GROUP BY 1", "counts.projects_inheriting_mattermost_slash_commands_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'MattermostSlashCommandsService' GROUP BY 1", "counts.groups_inheriting_mattermost_slash_commands_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'MattermostSlashCommandsService' GROUP BY 1", "counts.projects_microsoft_teams_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'MicrosoftTeamsService' GROUP BY 1", "counts.groups_microsoft_teams_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'MicrosoftTeamsService' GROUP BY 1", "counts.templates_microsoft_teams_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'MicrosoftTeamsService' GROUP BY 1", "counts.instances_microsoft_teams_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'MicrosoftTeamsService' GROUP BY 1", "counts.projects_inheriting_microsoft_teams_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'MicrosoftTeamsService' GROUP BY 1", "counts.groups_inheriting_microsoft_teams_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'MicrosoftTeamsService' GROUP BY 1", "counts.projects_mock_ci_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'MockCiService' GROUP BY 1", "counts.groups_mock_ci_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'MockCiService' GROUP BY 1", "counts.templates_mock_ci_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'MockCiService' GROUP BY 1", "counts.instances_mock_ci_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'MockCiService' GROUP BY 1", "counts.projects_inheriting_mock_ci_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'MockCiService' GROUP BY 1", "counts.groups_inheriting_mock_ci_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'MockCiService' GROUP BY 1", "counts.projects_mock_monitoring_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'MockMonitoringService' GROUP BY 1", "counts.groups_mock_monitoring_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'MockMonitoringService' GROUP BY 1", "counts.templates_mock_monitoring_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'MockMonitoringService' GROUP BY 1", "counts.instances_mock_monitoring_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'MockMonitoringService' GROUP BY 1", "counts.projects_inheriting_mock_monitoring_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'MockMonitoringService' GROUP BY 1", "counts.groups_inheriting_mock_monitoring_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'MockMonitoringService' GROUP BY 1", "counts.projects_packagist_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'PackagistService' GROUP BY 1", "counts.groups_packagist_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'PackagistService' GROUP BY 1", "counts.templates_packagist_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'PackagistService' GROUP BY 1", "counts.instances_packagist_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'PackagistService' GROUP BY 1", "counts.projects_inheriting_packagist_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'PackagistService' GROUP BY 1", "counts.groups_inheriting_packagist_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'PackagistService' GROUP BY 1", "counts.projects_pipelines_email_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'PipelinesEmailService' GROUP BY 1", "counts.groups_pipelines_email_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'PipelinesEmailService' GROUP BY 1", "counts.templates_pipelines_email_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'PipelinesEmailService' GROUP BY 1", "counts.instances_pipelines_email_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'PipelinesEmailService' GROUP BY 1", "counts.projects_inheriting_pipelines_email_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'PipelinesEmailService' GROUP BY 1", "counts.groups_inheriting_pipelines_email_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'PipelinesEmailService' GROUP BY 1", "counts.projects_pivotaltracker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'PivotaltrackerService' GROUP BY 1", "counts.groups_pivotaltracker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'PivotaltrackerService' GROUP BY 1", "counts.templates_pivotaltracker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'PivotaltrackerService' GROUP BY 1", "counts.instances_pivotaltracker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'PivotaltrackerService' GROUP BY 1", "counts.projects_inheriting_pivotaltracker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'PivotaltrackerService' GROUP BY 1", "counts.groups_inheriting_pivotaltracker_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'PivotaltrackerService' GROUP BY 1", "counts.projects_prometheus_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'PrometheusService' GROUP BY 1", "counts.groups_prometheus_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'PrometheusService' GROUP BY 1", "counts.templates_prometheus_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'PrometheusService' GROUP BY 1", "counts.instances_prometheus_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'PrometheusService' GROUP BY 1", "counts.projects_inheriting_prometheus_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'PrometheusService' GROUP BY 1", "counts.groups_inheriting_prometheus_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'PrometheusService' GROUP BY 1", "counts.projects_pushover_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'PushoverService' GROUP BY 1", "counts.groups_pushover_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'PushoverService' GROUP BY 1", "counts.templates_pushover_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'PushoverService' GROUP BY 1", "counts.instances_pushover_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'PushoverService' GROUP BY 1", "counts.projects_inheriting_pushover_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'PushoverService' GROUP BY 1", "counts.groups_inheriting_pushover_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'PushoverService' GROUP BY 1", "counts.projects_redmine_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'RedmineService' GROUP BY 1", "counts.groups_redmine_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'RedmineService' GROUP BY 1", "counts.templates_redmine_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'RedmineService' GROUP BY 1", "counts.instances_redmine_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'RedmineService' GROUP BY 1", "counts.projects_inheriting_redmine_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'RedmineService' GROUP BY 1", "counts.groups_inheriting_redmine_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'RedmineService' GROUP BY 1", "counts.projects_slack_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'SlackService' GROUP BY 1", "counts.groups_slack_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'SlackService' GROUP BY 1", "counts.templates_slack_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'SlackService' GROUP BY 1", "counts.instances_slack_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'SlackService' GROUP BY 1", "counts.projects_inheriting_slack_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'SlackService' GROUP BY 1", "counts.groups_inheriting_slack_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'SlackService' GROUP BY 1", "counts.projects_slack_slash_commands_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'SlackSlashCommandsService' GROUP BY 1", "counts.groups_slack_slash_commands_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'SlackSlashCommandsService' GROUP BY 1", "counts.templates_slack_slash_commands_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'SlackSlashCommandsService' GROUP BY 1", "counts.instances_slack_slash_commands_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'SlackSlashCommandsService' GROUP BY 1", "counts.projects_inheriting_slack_slash_commands_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'SlackSlashCommandsService' GROUP BY 1", "counts.groups_inheriting_slack_slash_commands_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'SlackSlashCommandsService' GROUP BY 1", "counts.projects_teamcity_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'TeamcityService' GROUP BY 1", "counts.groups_teamcity_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'TeamcityService' GROUP BY 1", "counts.templates_teamcity_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'TeamcityService' GROUP BY 1", "counts.instances_teamcity_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'TeamcityService' GROUP BY 1", "counts.projects_inheriting_teamcity_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'TeamcityService' GROUP BY 1", "counts.groups_inheriting_teamcity_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'TeamcityService' GROUP BY 1", "counts.projects_unify_circuit_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'UnifyCircuitService' GROUP BY 1", "counts.groups_unify_circuit_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'UnifyCircuitService' GROUP BY 1", "counts.templates_unify_circuit_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'UnifyCircuitService' GROUP BY 1", "counts.instances_unify_circuit_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'UnifyCircuitService' GROUP BY 1", "counts.projects_inheriting_unify_circuit_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'UnifyCircuitService' GROUP BY 1", "counts.groups_inheriting_unify_circuit_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'UnifyCircuitService' GROUP BY 1", "counts.projects_webex_teams_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'WebexTeamsService' GROUP BY 1", "counts.groups_webex_teams_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'WebexTeamsService' GROUP BY 1", "counts.templates_webex_teams_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'WebexTeamsService' GROUP BY 1", "counts.instances_webex_teams_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'WebexTeamsService' GROUP BY 1", "counts.projects_inheriting_webex_teams_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'WebexTeamsService' GROUP BY 1", "counts.groups_inheriting_webex_teams_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'WebexTeamsService' GROUP BY 1", "counts.projects_youtrack_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.type = 'YoutrackService' GROUP BY 1", "counts.groups_youtrack_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.type = 'YoutrackService' GROUP BY 1", "counts.templates_youtrack_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.template = TRUE AND services.type = 'YoutrackService' GROUP BY 1", "counts.instances_youtrack_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.instance = TRUE AND services.type = 'YoutrackService' GROUP BY 1", "counts.projects_inheriting_youtrack_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.project_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'YoutrackService' GROUP BY 1", "counts.groups_inheriting_youtrack_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.active = TRUE AND services.group_id IS NOT NULL AND services.inherit_from_id IS NOT NULL AND services.type = 'YoutrackService' GROUP BY 1", "counts.projects_jira_dvcs_cloud_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(project_feature_usages.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_project_feature_usages_dedupe_source AS project_feature_usages  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = project_feature_usages.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE project_feature_usages.jira_dvcs_cloud_last_sync_at IS NOT NULL GROUP BY 1", "counts.projects_jira_dvcs_server_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(project_feature_usages.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_project_feature_usages_dedupe_source AS project_feature_usages  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = project_feature_usages.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE project_feature_usages.jira_dvcs_server_last_sync_at IS NOT NULL GROUP BY 1", "counts.projects_jira_issuelist_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.{:start=>nil, :finish=>nil}), services.id AS t0_r0, services.type AS t0_r1, services.project_id AS t0_r2, services.created_at AS t0_r3, services.updated_at AS t0_r4, services.active AS t0_r5, services.properties AS t0_r6, services.push_events AS t0_r7, services.issues_events AS t0_r8, services.merge_requests_events AS t0_r9, services.tag_push_events AS t0_r10, services.note_events AS t0_r11, services.category AS t0_r12, services.wiki_page_events AS t0_r13, services.pipeline_events AS t0_r14, services.confidential_issues_events AS t0_r15, services.commit_events AS t0_r16, services.job_events AS t0_r17, services.confidential_note_events AS t0_r18, services.deployment_events AS t0_r19, services.comment_on_event_enabled AS t0_r20, services.template AS t0_r21, services.instance AS t0_r22, services.comment_detail AS t0_r23, services.inherit_from_id AS t0_r24, services.alert_events AS t0_r25, services.group_id AS t0_r26, jira_tracker_data.id AS t1_r0, jira_tracker_data.service_id AS t1_r1, jira_tracker_data.created_at AS t1_r2, jira_tracker_data.updated_at AS t1_r3, jira_tracker_data.encrypted_url AS t1_r4, jira_tracker_data.encrypted_url_iv AS t1_r5, jira_tracker_data.encrypted_api_url AS t1_r6, jira_tracker_data.encrypted_api_url_iv AS t1_r7, jira_tracker_data.encrypted_username AS t1_r8, jira_tracker_data.encrypted_username_iv AS t1_r9, jira_tracker_data.encrypted_password AS t1_r10, jira_tracker_data.encrypted_password_iv AS t1_r11, jira_tracker_data.jira_issue_transition_id AS t1_r12, jira_tracker_data.project_key AS t1_r13, jira_tracker_data.issues_enabled AS t1_r14, jira_tracker_data.deployment_type AS t1_r15, jira_tracker_data.vulnerabilities_issuetype AS t1_r16, jira_tracker_data.vulnerabilities_enabled AS t1_r17, jira_tracker_data.encrypted_proxy_address AS t1_r18, jira_tracker_data.encrypted_proxy_address_iv AS t1_r19, jira_tracker_data.encrypted_proxy_port AS t1_r20, jira_tracker_data.encrypted_proxy_port_iv AS t1_r21, jira_tracker_data.encrypted_proxy_username AS t1_r22, jira_tracker_data.encrypted_proxy_username_iv AS t1_r23, jira_tracker_data.encrypted_proxy_password AS t1_r24, jira_tracker_data.encrypted_proxy_password_iv AS t1_r25 AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services LEFT OUTER JOIN prep.gitlab_dotcom.gitlab_dotcom_jira_tracker_data_dedupe_source AS jira_tracker_data ON jira_tracker_data.service_id = services.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.type = 'JiraService' AND services.active = TRUE AND jira_tracker_data.issues_enabled = TRUE GROUP BY 1", "counts.jira_imports_total_imported_count": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(jira_imports.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_jira_imports_dedupe_source AS jira_imports  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = jira_imports.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE jira_imports.status = 4 GROUP BY 1", "counts.jira_imports_projects_count": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT jira_imports.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_jira_imports_dedupe_source AS jira_imports  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = jira_imports.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE jira_imports.status = 4 GROUP BY 1", "counts.jira_imports_total_imported_issues_count": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  SUM(jira_imports.imported_issues_count) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_jira_imports_dedupe_source AS jira_imports  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = jira_imports.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE jira_imports.status = 4 GROUP BY 1", "counts.user_preferences_group_overview_details": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(users.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_users_dedupe_source AS users  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (users.state IN ('active')) AND (users.user_type IS NULL OR users.user_type IN (NULL, 6, 4)) AND (group_view = 1 OR group_view IS NULL) GROUP BY 1", "counts.user_preferences_group_overview_security_dashboard": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(users.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_users_dedupe_source AS users  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (users.state IN ('active')) AND (users.user_type IS NULL OR users.user_type IN (NULL, 6, 4)) AND users.group_view = 2 GROUP BY 1", "counts.projects_with_expiration_policy_disabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = FALSE GROUP BY 1", "counts.projects_with_expiration_policy_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_keep_n_set_to_1": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.keep_n = 1 GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_keep_n_set_to_5": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.keep_n = 5 GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_keep_n_set_to_10": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.keep_n = 10 GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_keep_n_set_to_25": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.keep_n = 25 GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_keep_n_set_to_50": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.keep_n = 50 GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_keep_n_set_to_100": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.keep_n = 100 GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_cadence_set_to_1d": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.cadence = '1d' GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_cadence_set_to_7d": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.cadence = '7d' GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_cadence_set_to_14d": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.cadence = '14d' GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_cadence_set_to_1month": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.cadence = '1month' GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_cadence_set_to_3month": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.cadence = '3month' GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_older_than_set_to_7d": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.older_than = '7d' GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_older_than_set_to_14d": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.older_than = '14d' GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_older_than_set_to_30d": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.older_than = '30d' GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_older_than_set_to_90d": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.older_than = '90d' GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_keep_n_unset": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.keep_n IS NULL GROUP BY 1", "counts.projects_with_expiration_policy_enabled_with_older_than_unset": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT container_expiration_policies.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source AS container_expiration_policies  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = container_expiration_policies.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE container_expiration_policies.enabled = TRUE AND container_expiration_policies.older_than IS NULL GROUP BY 1", "counts.service_desk_enabled_projects": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.service_desk_enabled = TRUE GROUP BY 1", "counts.service_desk_issues": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(issues.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE issues.project_id IN (SELECT projects.id FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects WHERE projects.service_desk_enabled = TRUE) AND issues.author_id = 82 AND issues.confidential = TRUE GROUP BY 1", "counts.snippets": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(snippets.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_snippets_dedupe_source AS snippets  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = snippets.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE snippets.type = 'PersonalSnippet'SELECT COUNT(snippets.id) FROM prep.gitlab_dotcom.gitlab_dotcom_snippets_dedupe_source AS snippets WHERE snippets.type = 'ProjectSnippet' GROUP BY 1", "counts.confidential_epics": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(epics.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_epics_dedupe_source AS epics  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = epics.group_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE epics.confidential = TRUE GROUP BY 1", "counts.epics": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(epics.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_epics_dedupe_source AS epics LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = epics.group_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.feature_flags": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(operations_feature_flags.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_operations_feature_flags_dedupe_source AS operations_feature_flags LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = operations_feature_flags.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.issues_with_health_status": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(issues.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE issues.health_status IS NOT NULL GROUP BY 1", "counts.ldap_users": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(users.users.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_users_dedupe_source AS users INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_identities_dedupe_source AS identities ON identities.user_id = users.id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (identities.provider LIKE 'ldap%') GROUP BY 1", "counts.merged_merge_requests_using_approval_rules": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(merge_requests.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_merge_requests_dedupe_source AS merge_requests INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_approval_merge_request_rules_dedupe_source AS approval_merge_request_rules ON approval_merge_request_rules.merge_request_id = merge_requests.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = merge_requests.target_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (merge_requests.state_id IN (3)) GROUP BY 1", "counts.projects_mirrored_with_pipelines_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_project_features_dedupe_source AS project_features ON project_features.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.mirror = TRUE AND projects.mirror_trigger_builds = TRUE AND project_features.builds_access_level = 20 GROUP BY 1", "counts.projects_reporting_ci_cd_back_to_github": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(services.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = services.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.type = 'GithubService' AND services.active = TRUE GROUP BY 1", "counts.status_page_projects": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(status_page_settings.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_status_page_settings_dedupe_source AS status_page_settings  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = status_page_settings.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE status_page_settings.enabled = TRUE GROUP BY 1", "counts.status_page_issues": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(issues.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_status_page_settings_dedupe_source AS status_page_settings ON status_page_settings.project_id = projects.id INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_status_page_published_incidents_dedupe_source AS status_page_published_incidents ON status_page_published_incidents.issue_id = issues.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE status_page_settings.enabled = TRUE AND issues.confidential = FALSE GROUP BY 1", "counts.template_repositories": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.namespace_id IS NULLSELECT COUNT(projects.id) FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.custom_project_templates_group_id GROUP BY 1", "counts.requirements_created": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(requirements.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_requirements_dedupe_source AS requirements LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = requirements.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "counts.container_scanning_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_builds.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'container_scanning' GROUP BY 1", "counts.dast_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_builds.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'dast' GROUP BY 1", "counts.dependency_scanning_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_builds.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'dependency_scanning' GROUP BY 1", "counts.license_management_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_builds.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'license_management' GROUP BY 1", "counts.sast_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_builds.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'sast' GROUP BY 1", "counts.secret_detection_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_builds.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'secret_detection' GROUP BY 1", "counts.coverage_fuzzing_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_builds.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'coverage_fuzzing' GROUP BY 1", "counts.api_fuzzing_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_builds.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'apifuzzer_fuzz' GROUP BY 1", "counts.api_fuzzing_dnd_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_builds.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'apifuzzer_fuzz_dnd' GROUP BY 1", "counts.dast_on_demand_pipelines": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(ci_pipelines.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source AS ci_pipelines  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipelines.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_pipelines.source = 13 GROUP BY 1", "counts.operations_dashboard_default_dashboard": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(users.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_users_dedupe_source AS users  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (users.state IN ('active')) AND (users.user_type IS NULL OR users.user_type IN (NULL, 6, 4)) AND users.dashboard = 8 GROUP BY 1", "counts.operations_dashboard_users_with_projects_added": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT users_ops_dashboard_projects.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_users_ops_dashboard_projects_dedupe_source AS users_ops_dashboard_projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_users_dedupe_source AS users ON users.id = users_ops_dashboard_projects.user_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = users_ops_dashboard_projects.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (users.state IN ('active')) AND (users.user_type IS NULL OR users.user_type IN (NULL, 6, 4)) GROUP BY 1", "counts_monthly.deployments": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(deployments.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_deployments_dedupe_source AS deployments  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = deployments.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE deployments.created_at BETWEEN '2021-01-10 13:25:43.303335' AND '2021-02-07 13:25:43.303411' GROUP BY 1", "counts_monthly.successful_deployments": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(deployments.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_deployments_dedupe_source AS deployments  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = deployments.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE deployments.status = 2 AND deployments.created_at BETWEEN '2021-01-10 13:25:43.303802' AND '2021-02-07 13:25:43.303834' GROUP BY 1", "counts_monthly.failed_deployments": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(deployments.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_deployments_dedupe_source AS deployments  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = deployments.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE deployments.status = 3 AND deployments.created_at BETWEEN '2021-01-10 13:25:43.304132' AND '2021-02-07 13:25:43.304164' GROUP BY 1", "counts_monthly.packages": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(packages_packages.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_packages_packages_dedupe_source AS packages_packages  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = packages_packages.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE packages_packages.created_at BETWEEN '2021-01-10 13:25:43.304396' AND '2021-02-07 13:25:43.304424' GROUP BY 1", "counts_monthly.personal_snippets": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(snippets.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_snippets_dedupe_source AS snippets  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = snippets.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE snippets.type = 'PersonalSnippet' AND snippets.created_at BETWEEN '2021-01-10 13:25:43.306149' AND '2021-02-07 13:25:43.306190' GROUP BY 1", "counts_monthly.project_snippets": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(snippets.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_snippets_dedupe_source AS snippets  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = snippets.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE snippets.type = 'ProjectSnippet' AND snippets.created_at BETWEEN '2021-01-10 13:25:43.306592' AND '2021-02-07 13:25:43.306628' GROUP BY 1", "counts_monthly.projects_with_alerts_created": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT alert_management_alerts.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_alert_management_alerts_dedupe_source AS alert_management_alerts  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = alert_management_alerts.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE alert_management_alerts.created_at BETWEEN '2021-01-10 13:25:43.307001' AND '2021-02-07 13:25:43.307032' GROUP BY 1", "counts_monthly.snippets": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(snippets.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_snippets_dedupe_source AS snippets  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = snippets.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE snippets.type = 'PersonalSnippet' AND snippets.created_at BETWEEN '2021-01-10 13:25:43.306149' AND '2021-02-07 13:25:43.306190'SELECT COUNT(snippets.id) FROM prep.gitlab_dotcom.gitlab_dotcom_snippets_dedupe_source AS snippets WHERE snippets.type = 'ProjectSnippet' AND snippets.created_at BETWEEN '2021-01-10 13:25:43.306592' AND '2021-02-07 13:25:43.306628' GROUP BY 1", "usage_activity_by_stage.configure.clusters_management_project": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.management_project_id IS NOT NULL GROUP BY 1", "usage_activity_by_stage.configure.clusters_disabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = FALSE GROUP BY 1", "usage_activity_by_stage.configure.clusters_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = TRUE GROUP BY 1", "usage_activity_by_stage.configure.clusters_platforms_gke": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_cluster_providers_gcp_dedupe_source AS cluster_providers_gcp ON cluster_providers_gcp.cluster_id = clusters.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.provider_type = 1 AND (cluster_providers_gcp.status IN (3)) AND clusters.enabled = TRUE GROUP BY 1", "usage_activity_by_stage.configure.clusters_platforms_eks": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_cluster_providers_aws_dedupe_source AS cluster_providers_aws ON cluster_providers_aws.cluster_id = clusters.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.provider_type = 2 AND (cluster_providers_aws.status IN (3)) AND clusters.enabled = TRUE GROUP BY 1", "usage_activity_by_stage.configure.clusters_platforms_user": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.provider_type = 0 AND clusters.enabled = TRUE GROUP BY 1", "usage_activity_by_stage.configure.instance_clusters_disabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = FALSE AND clusters.cluster_type = 1 GROUP BY 1", "usage_activity_by_stage.configure.instance_clusters_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = TRUE AND clusters.cluster_type = 1 GROUP BY 1", "usage_activity_by_stage.configure.group_clusters_disabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = FALSE AND clusters.cluster_type = 2 GROUP BY 1", "usage_activity_by_stage.configure.group_clusters_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = TRUE AND clusters.cluster_type = 2 GROUP BY 1", "usage_activity_by_stage.configure.project_clusters_disabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = FALSE AND clusters.cluster_type = 3 GROUP BY 1", "usage_activity_by_stage.configure.project_clusters_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = TRUE AND clusters.cluster_type = 3 GROUP BY 1", "usage_activity_by_stage.configure.projects_slack_notifications_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services ON services.project_id = projects.id AND services.type = 'SlackService' LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.configure.projects_slack_slash_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services ON services.project_id = projects.id AND services.type = 'SlackSlashCommandsService' LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.configure.projects_with_prometheus_alerts": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services ON services.project_id = projects.id AND services.type = 'PrometheusService' LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.create.merge_requests": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT merge_requests.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_merge_requests_dedupe_source AS merge_requests LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = merge_requests.target_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.create.projects_with_disable_overriding_approvers_per_merge_request": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.disable_overriding_approvers_per_merge_request = TRUE GROUP BY 1", "usage_activity_by_stage.create.projects_without_disable_overriding_approvers_per_merge_request": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (projects.disable_overriding_approvers_per_merge_request = FALSE OR projects.disable_overriding_approvers_per_merge_request IS NULL) GROUP BY 1", "usage_activity_by_stage.create.remote_mirrors": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  DISTINCT COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_remote_mirrors_dedupe_source AS remote_mirrors ON remote_mirrors.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE remote_mirrors.enabled = TRUE GROUP BY 1", "usage_activity_by_stage.create.snippets": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT snippets.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_snippets_dedupe_source AS snippets LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = snippets.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.create.projects_enforcing_code_owner_approval": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_protected_branches_dedupe_source AS protected_branches ON protected_branches.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE protected_branches.code_owner_approval_required = TRUE GROUP BY 1", "usage_activity_by_stage.create.merge_requests_with_overridden_project_rules": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT approval_merge_request_rules.merge_request_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_approval_merge_request_rules_dedupe_source AS approval_merge_request_rules  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ((EXISTS (   SELECT     1   FROM     prep.gitlab_dotcom.gitlab_dotcom_approval_merge_request_rule_sources_dedupe_source AS approval_merge_request_rule_sources   WHERE     approval_merge_request_rule_sources.approval_merge_request_rule_id = approval_merge_request_rules.id     AND NOT EXISTS (       SELECT         1       FROM         prep.gitlab_dotcom.gitlab_dotcom_approval_project_rules_dedupe_source AS approval_project_rules       WHERE         approval_project_rules.id = approval_merge_request_rule_sources.approval_project_rule_id         AND EXISTS (           SELECT             1           FROM             prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects           WHERE             projects.id = approval_project_rules.project_id             AND projects.disable_overriding_approvers_per_merge_request = FALSE))))     OR(approval_merge_request_rules.modified_from_project_rule = TRUE) ) GROUP BY 1", "usage_activity_by_stage.create.projects_imported_from_github": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'github' GROUP BY 1", "usage_activity_by_stage.create.projects_with_repositories_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_project_features_dedupe_source AS project_features ON project_features.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE project_features.repository_access_level = 20 GROUP BY 1", "usage_activity_by_stage.create.protected_branches": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_protected_branches_dedupe_source AS protected_branches ON protected_branches.project_id = projects.id LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.create.suggestions": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT notes.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_notes_dedupe_source AS notes INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_suggestions_dedupe_source AS suggestions ON suggestions.note_id = notes.id LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = notes.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.create.users_using_path_locks": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT path_locks.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_path_locks_dedupe_source AS path_locks LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = path_locks.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.create.users_using_lfs_locks": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT lfs_file_locks.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_lfs_file_locks_dedupe_source AS lfs_file_locks LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = lfs_file_locks.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.create.total_number_of_path_locks": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(path_locks.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_path_locks_dedupe_source AS path_locks LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = path_locks.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.create.total_number_of_locked_files": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(lfs_file_locks.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_lfs_file_locks_dedupe_source AS lfs_file_locks LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = lfs_file_locks.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.create.approval_project_rules": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(approval_project_rules.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_approval_project_rules_dedupe_source AS approval_project_rules LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = approval_project_rules.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.manage.events": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT events.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_events_dedupe_source AS events LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = events.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.manage.users_created": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(users.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_users_dedupe_source AS users LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.manage.unique_users_all_imports": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type IS NOT NULLSELECT COUNT(DISTINCT bulk_imports.user_id) FROM prep.gitlab_dotcom.gitlab_dotcom_bulk_importsSELECT_dedupe_source AS bulk_importsSELECT COUNT(DISTINCT jira_imports.user_id) FROM prep.gitlab_dotcom.gitlab_dotcom_jira_importsSELECT_dedupe_source AS jira_importsSELECT COUNT(DISTINCT csv_issue_imports.user_id) FROM prep.gitlab_dotcom.gitlab_dotcom_csv_issue_importsSELECT_dedupe_source AS csv_issue_importsSELECT COUNT(DISTINCT group_import_states.user_id) FROM prep.gitlab_dotcom.gitlab_dotcom_group_import_states_dedupe_source AS group_import_states GROUP BY 1", "usage_activity_by_stage.manage.project_imports.gitlab_project": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'gitlab_project' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage.manage.project_imports.gitlab": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'gitlab' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage.manage.project_imports.github": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'github' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage.manage.project_imports.bitbucket": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'bitbucket' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage.manage.project_imports.bitbucket_server": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'bitbucket_server' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage.manage.project_imports.gitea": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'gitea' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage.manage.project_imports.git": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'git' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage.manage.project_imports.manifest": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'manifest' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage.manage.project_imports.gitlab_migration": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(bulk_import_entities.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_bulk_import_entities_dedupe_source AS bulk_import_entities  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = bulk_import_entities.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE bulk_import_entities.source_type = 1 GROUP BY 1", "usage_activity_by_stage.manage.issue_imports.jira": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(jira_imports.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_jira_imports_dedupe_source AS jira_imports LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = jira_imports.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.manage.issue_imports.fogbugz": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'fogbugz' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage.manage.issue_imports.phabricator": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'phabricator' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage.manage.issue_imports.csv": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(csv_issue_imports.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_csv_issue_imports_dedupe_source AS csv_issue_imports LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = csv_issue_imports.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.manage.group_imports.group_import": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(group_import_states.group_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_group_import_states_dedupe_source AS group_import_states LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = group_import_states.group_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.manage.group_imports.gitlab_migration": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(bulk_import_entities.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_bulk_import_entities_dedupe_source AS bulk_import_entities  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = bulk_import_entities.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE bulk_import_entities.source_type = 0 GROUP BY 1", "usage_activity_by_stage.manage.value_stream_management_customized_group_stages": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(analytics_cycle_analytics_group_stages.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_analytics_cycle_analytics_group_stages_dedupe_source AS analytics_cycle_analytics_group_stages  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = analytics_cycle_analytics_group_stages.group_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE analytics_cycle_analytics_group_stages.custom = TRUE GROUP BY 1", "usage_activity_by_stage.manage.projects_with_compliance_framework": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(project_compliance_framework_settings.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_project_compliance_framework_settings_dedupe_source AS project_compliance_framework_settings LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = project_compliance_framework_settings.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.monitor.clusters": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.monitor.operations_dashboard_default_dashboard": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(users.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_users_dedupe_source AS users  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (users.state IN ('active')) AND (users.user_type IS NULL OR users.user_type IN (NULL, 6, 4)) AND users.dashboard = 8 GROUP BY 1", "usage_activity_by_stage.monitor.projects_with_tracing_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_project_tracing_settings_dedupe_source AS project_tracing_settings ON project_tracing_settings.project_id = projects.id LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.monitor.projects_with_error_tracking_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_project_error_tracking_settings_dedupe_source AS project_error_tracking_settings ON project_error_tracking_settings.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE project_error_tracking_settings.enabled = TRUE GROUP BY 1", "usage_activity_by_stage.monitor.projects_with_incidents": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT issues.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE issues.issue_type = 1 GROUP BY 1", "usage_activity_by_stage.monitor.projects_with_alert_incidents": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT issues.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_alert_management_alerts_dedupe_source AS alert_management_alerts ON alert_management_alerts.issue_id = issues.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE issues.issue_type = 1 GROUP BY 1", "usage_activity_by_stage.monitor.operations_dashboard_users_with_projects_added": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT users_ops_dashboard_projects.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_users_ops_dashboard_projects_dedupe_source AS users_ops_dashboard_projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_users_dedupe_source AS users ON users.id = users_ops_dashboard_projects.user_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = users_ops_dashboard_projects.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (users.state IN ('active')) AND (users.user_type IS NULL OR users.user_type IN (NULL, 6, 4)) GROUP BY 1", "usage_activity_by_stage.monitor.projects_incident_sla_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_project_incident_management_settings_dedupe_source AS project_incident_management_settings ON project_incident_management_settings.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE project_incident_management_settings.sla_timer = TRUE GROUP BY 1", "usage_activity_by_stage.package.projects_with_packages": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_packages_packages_dedupe_source AS packages_packages ON packages_packages.project_id = projects.id LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.plan.issues": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT issues.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.plan.notes": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT notes.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_notes_dedupe_source AS notes LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = notes.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.plan.projects": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.plan.todos": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT todos.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_todos_dedupe_source AS todos LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = todos.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.plan.service_desk_enabled_projects": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.service_desk_enabled = TRUE GROUP BY 1", "usage_activity_by_stage.plan.service_desk_issues": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(issues.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE issues.author_id = 82 GROUP BY 1", "usage_activity_by_stage.plan.projects_jira_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services ON services.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.type = 'JiraService' AND services.active = TRUE GROUP BY 1", "usage_activity_by_stage.plan.projects_jira_dvcs_cloud_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services ON services.project_id = projects.id INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_project_feature_usages_dedupe_source AS project_feature_usages ON project_feature_usages.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.type = 'JiraService' AND services.active = TRUE AND project_feature_usages.jira_dvcs_cloud_last_sync_at IS NOT NULL GROUP BY 1", "usage_activity_by_stage.plan.projects_jira_dvcs_server_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services ON services.project_id = projects.id INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_project_feature_usages_dedupe_source AS project_feature_usages ON project_feature_usages.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.type = 'JiraService' AND services.active = TRUE AND project_feature_usages.jira_dvcs_server_last_sync_at IS NOT NULL GROUP BY 1", "usage_activity_by_stage.plan.epics": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT epics.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_epics_dedupe_source AS epics LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = epics.group_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.release.deployments": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT deployments.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_deployments_dedupe_source AS deployments LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = deployments.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.release.failed_deployments": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT deployments.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_deployments_dedupe_source AS deployments  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = deployments.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE deployments.status = 3 GROUP BY 1", "usage_activity_by_stage.release.releases": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT releases.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_releases_dedupe_source AS releases LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = releases.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.release.successful_deployments": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT deployments.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_deployments_dedupe_source AS deployments  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = deployments.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE deployments.status = 2 GROUP BY 1", "usage_activity_by_stage.release.projects_mirrored_with_pipelines_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_project_features_dedupe_source AS project_features ON project_features.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.mirror = TRUE AND projects.mirror_trigger_builds = TRUE AND project_features.builds_access_level = 20 GROUP BY 1", "usage_activity_by_stage.secure.user_preferences_group_overview_security_dashboard": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(users.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_users_dedupe_source AS users  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (users.state IN ('active')) AND (users.user_type IS NULL OR users.user_type IN (NULL, 6, 4)) AND users.group_view = 2 GROUP BY 1", "usage_activity_by_stage.secure.user_container_scanning_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'container_scanning' GROUP BY 1", "usage_activity_by_stage.secure.user_dast_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'dast' GROUP BY 1", "usage_activity_by_stage.secure.user_dependency_scanning_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'dependency_scanning' GROUP BY 1", "usage_activity_by_stage.secure.user_license_management_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'license_management' GROUP BY 1", "usage_activity_by_stage.secure.user_sast_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'sast' GROUP BY 1", "usage_activity_by_stage.secure.user_secret_detection_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'secret_detection' GROUP BY 1", "usage_activity_by_stage.secure.user_coverage_fuzzing_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'coverage_fuzzing' GROUP BY 1", "usage_activity_by_stage.secure.user_api_fuzzing_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'apifuzzer_fuzz' GROUP BY 1", "usage_activity_by_stage.secure.user_api_fuzzing_dnd_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'apifuzzer_fuzz_dnd' GROUP BY 1", "usage_activity_by_stage.secure.user_unique_users_all_secure_scanners": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name IN ('container_scanning', 'dast', 'dependency_scanning', 'license_management', 'license_scanning', 'sast', 'secret_detection', 'coverage_fuzzing', 'apifuzzer_fuzz', 'apifuzzer_fuzz_dnd') GROUP BY 1", "usage_activity_by_stage.verify.ci_builds": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' GROUP BY 1", "usage_activity_by_stage.verify.ci_external_pipelines": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_pipelines.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source AS ci_pipelines  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipelines.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_pipelines.source = 6 GROUP BY 1", "usage_activity_by_stage.verify.ci_internal_pipelines": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_pipelines.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source AS ci_pipelines  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipelines.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (ci_pipelines.source IN (1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13) OR ci_pipelines.source IS NULL) GROUP BY 1", "usage_activity_by_stage.verify.ci_pipeline_config_auto_devops": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_pipelines.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source AS ci_pipelines  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipelines.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_pipelines.config_source = 2 GROUP BY 1", "usage_activity_by_stage.verify.ci_pipeline_config_repository": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_pipelines.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source AS ci_pipelines  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipelines.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_pipelines.config_source = 1 GROUP BY 1", "usage_activity_by_stage.verify.ci_pipeline_schedules": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_pipeline_schedules.owner_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipeline_schedules_dedupe_source AS ci_pipeline_schedules LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipeline_schedules.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.verify.ci_pipelines": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_pipelines.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source AS ci_pipelines LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipelines.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.verify.ci_triggers": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_triggers.owner_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_triggers_dedupe_source AS ci_triggers LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_triggers.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage.verify.projects_reporting_ci_cd_back_to_github": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services ON services.project_id = projects.id AND services.type = 'GithubService'  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.type = 'GithubService' AND services.pipeline_events = TRUE AND services.active = TRUE GROUP BY 1", "usage_activity_by_stage_monthly.configure.clusters_management_project": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.management_project_id IS NOT NULL AND clusters.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.configure.clusters_disabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = FALSE AND clusters.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.configure.clusters_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = TRUE AND clusters.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.configure.clusters_platforms_gke": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_cluster_providers_gcp_dedupe_source AS cluster_providers_gcp ON cluster_providers_gcp.cluster_id = clusters.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.provider_type = 1 AND (cluster_providers_gcp.status IN (3)) AND clusters.enabled = TRUE AND clusters.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.configure.clusters_platforms_eks": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_cluster_providers_aws_dedupe_source AS cluster_providers_aws ON cluster_providers_aws.cluster_id = clusters.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.provider_type = 2 AND (cluster_providers_aws.status IN (3)) AND clusters.enabled = TRUE AND clusters.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.configure.clusters_platforms_user": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.provider_type = 0 AND clusters.enabled = TRUE AND clusters.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.configure.instance_clusters_disabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = FALSE AND clusters.cluster_type = 1 AND clusters.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.configure.instance_clusters_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = TRUE AND clusters.cluster_type = 1 AND clusters.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.configure.group_clusters_disabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = FALSE AND clusters.cluster_type = 2 AND clusters.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.configure.group_clusters_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = TRUE AND clusters.cluster_type = 2 AND clusters.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.configure.project_clusters_disabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = FALSE AND clusters.cluster_type = 3 AND clusters.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.configure.project_clusters_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.enabled = TRUE AND clusters.cluster_type = 3 AND clusters.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.configure.projects_slack_notifications_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services ON services.project_id = projects.id AND services.type = 'SlackService'  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.configure.projects_slack_slash_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services ON services.project_id = projects.id AND services.type = 'SlackSlashCommandsService'  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.configure.projects_with_prometheus_alerts": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services ON services.project_id = projects.id AND services.type = 'PrometheusService'  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.create.merge_requests": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT merge_requests.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_merge_requests_dedupe_source AS merge_requests  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = merge_requests.target_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE merge_requests.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.create.projects_with_disable_overriding_approvers_per_merge_request": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND projects.disable_overriding_approvers_per_merge_request = TRUE GROUP BY 1", "usage_activity_by_stage_monthly.create.projects_without_disable_overriding_approvers_per_merge_request": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND (projects.disable_overriding_approvers_per_merge_request = FALSE OR projects.disable_overriding_approvers_per_merge_request IS NULL) GROUP BY 1", "usage_activity_by_stage_monthly.create.remote_mirrors": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  DISTINCT COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_remote_mirrors_dedupe_source AS remote_mirrors ON remote_mirrors.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE remote_mirrors.enabled = TRUE AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.create.snippets": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT snippets.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_snippets_dedupe_source AS snippets  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = snippets.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE snippets.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.create.projects_enforcing_code_owner_approval": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_protected_branches_dedupe_source AS protected_branches ON protected_branches.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE protected_branches.code_owner_approval_required = TRUE AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.create.merge_requests_with_overridden_project_rules": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT approval_merge_request_rules.merge_request_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_approval_merge_request_rules_dedupe_source AS approval_merge_request_rules  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE approval_merge_request_rules.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND ((EXISTS (   SELECT     1   FROM     prep.gitlab_dotcom.gitlab_dotcom_approval_merge_request_rule_sources_dedupe_source AS approval_merge_request_rule_sources   WHERE     approval_merge_request_rule_sources.approval_merge_request_rule_id = approval_merge_request_rules.id     AND NOT EXISTS (       SELECT         1       FROM         prep.gitlab_dotcom.gitlab_dotcom_approval_project_rules_dedupe_source AS approval_project_rules       WHERE         approval_project_rules.id = approval_merge_request_rule_sources.approval_project_rule_id         AND EXISTS (           SELECT             1           FROM             prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects           WHERE             projects.id = approval_project_rules.project_id             AND projects.disable_overriding_approvers_per_merge_request = FALSE))))     OR(approval_merge_request_rules.modified_from_project_rule = TRUE) ) GROUP BY 1", "usage_activity_by_stage_monthly.create.projects_imported_from_github": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'github' AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.create.projects_with_repositories_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_project_features_dedupe_source AS project_features ON project_features.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE project_features.repository_access_level = 20 AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.create.protected_branches": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_protected_branches_dedupe_source AS protected_branches ON protected_branches.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.create.suggestions": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT notes.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_notes_dedupe_source AS notes INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_suggestions_dedupe_source AS suggestions ON suggestions.note_id = notes.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = notes.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE notes.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.create.users_using_path_locks": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT path_locks.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_path_locks_dedupe_source AS path_locks  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = path_locks.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE path_locks.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.create.users_using_lfs_locks": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT lfs_file_locks.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_lfs_file_locks_dedupe_source AS lfs_file_locks  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = lfs_file_locks.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE lfs_file_locks.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.create.total_number_of_path_locks": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(path_locks.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_path_locks_dedupe_source AS path_locks  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = path_locks.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE path_locks.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.create.total_number_of_locked_files": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(lfs_file_locks.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_lfs_file_locks_dedupe_source AS lfs_file_locks  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = lfs_file_locks.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE lfs_file_locks.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.create.approval_project_rules": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(approval_project_rules.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_approval_project_rules_dedupe_source AS approval_project_rules LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = approval_project_rules.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage_monthly.manage.events": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT events.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_events_dedupe_source AS events  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = events.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE events.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.manage.users_created": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(users.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_users_dedupe_source AS users  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE users.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.manage.unique_users_all_imports": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND projects.import_type IS NOT NULLSELECT COUNT(DISTINCT bulk_imports.user_id) FROM prep.gitlab_dotcom.gitlab_dotcom_bulk_imports_dedupe_source AS bulk_imports WHERE bulk_imports.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993'SELECT COUNT(DISTINCT jira_imports.user_id) FROM prep.gitlab_dotcom.gitlab_dotcom_jira_imports_dedupe_source AS jira_imports WHERE jira_imports.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993'SELECT COUNT(DISTINCT csv_issue_imports.user_id) FROM prep.gitlab_dotcom.gitlab_dotcom_csv_issue_imports_dedupe_source AS csv_issue_imports WHERE csv_issue_imports.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993'SELECT COUNT(DISTINCT group_import_states.user_id) FROM prep.gitlab_dotcom.gitlab_dotcom_group_import_states_dedupe_source AS group_import_states WHERE group_import_states.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.manage.project_imports.gitlab_project": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'gitlab_project' AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage_monthly.manage.project_imports.gitlab": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'gitlab' AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage_monthly.manage.project_imports.github": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'github' AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage_monthly.manage.project_imports.bitbucket": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'bitbucket' AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage_monthly.manage.project_imports.bitbucket_server": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'bitbucket_server' AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage_monthly.manage.project_imports.gitea": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'gitea' AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage_monthly.manage.project_imports.git": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'git' AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage_monthly.manage.project_imports.manifest": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'manifest' AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage_monthly.manage.project_imports.gitlab_migration": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(bulk_import_entities.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_bulk_import_entities_dedupe_source AS bulk_import_entities  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = bulk_import_entities.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE bulk_import_entities.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND bulk_import_entities.source_type = 1 GROUP BY 1", "usage_activity_by_stage_monthly.manage.issue_imports.jira": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(jira_imports.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_jira_imports_dedupe_source AS jira_imports  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = jira_imports.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE jira_imports.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.manage.issue_imports.fogbugz": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'fogbugz' AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage_monthly.manage.issue_imports.phabricator": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.import_type = 'phabricator' AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND projects.import_type IS NOT NULL GROUP BY 1", "usage_activity_by_stage_monthly.manage.issue_imports.csv": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(csv_issue_imports.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_csv_issue_imports_dedupe_source AS csv_issue_imports  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = csv_issue_imports.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE csv_issue_imports.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.manage.group_imports.group_import": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(group_import_states.group_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_group_import_states_dedupe_source AS group_import_states  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = group_import_states.group_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE group_import_states.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.manage.group_imports.gitlab_migration": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(bulk_import_entities.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_bulk_import_entities_dedupe_source AS bulk_import_entities  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = bulk_import_entities.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE bulk_import_entities.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' AND bulk_import_entities.source_type = 0 GROUP BY 1", "usage_activity_by_stage_monthly.manage.value_stream_management_customized_group_stages": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(analytics_cycle_analytics_group_stages.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_analytics_cycle_analytics_group_stages_dedupe_source AS analytics_cycle_analytics_group_stages  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = analytics_cycle_analytics_group_stages.group_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE analytics_cycle_analytics_group_stages.custom = TRUE GROUP BY 1", "usage_activity_by_stage_monthly.manage.projects_with_compliance_framework": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(project_compliance_framework_settings.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_project_compliance_framework_settings_dedupe_source AS project_compliance_framework_settings LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = project_compliance_framework_settings.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id  GROUP BY 1", "usage_activity_by_stage_monthly.monitor.clusters": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT clusters.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source AS clusters  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = clusters.management_project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE clusters.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.monitor.operations_dashboard_default_dashboard": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(users.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_users_dedupe_source AS users  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (users.state IN ('active')) AND (users.user_type IS NULL OR users.user_type IN (NULL, 6, 4)) AND users.dashboard = 8 AND users.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.monitor.projects_with_tracing_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_project_tracing_settings_dedupe_source AS project_tracing_settings ON project_tracing_settings.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.monitor.projects_with_error_tracking_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_project_error_tracking_settings_dedupe_source AS project_error_tracking_settings ON project_error_tracking_settings.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE project_error_tracking_settings.enabled = TRUE AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.monitor.projects_with_incidents": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT issues.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE issues.issue_type = 1 AND issues.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.monitor.projects_with_alert_incidents": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT issues.project_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_alert_management_alerts_dedupe_source AS alert_management_alerts ON alert_management_alerts.issue_id = issues.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE issues.issue_type = 1 AND issues.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.monitor.operations_dashboard_users_with_projects_added": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT users_ops_dashboard_projects.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_users_ops_dashboard_projects_dedupe_source AS users_ops_dashboard_projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_users_dedupe_source AS users ON users.id = users_ops_dashboard_projects.user_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = users_ops_dashboard_projects.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (users.state IN ('active')) AND (users.user_type IS NULL OR users.user_type IN (NULL, 6, 4)) AND users_ops_dashboard_projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.monitor.projects_incident_sla_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(projects.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_project_incident_management_settings_dedupe_source AS project_incident_management_settings ON project_incident_management_settings.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE project_incident_management_settings.sla_timer = TRUE GROUP BY 1", "usage_activity_by_stage_monthly.package.projects_with_packages": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_packages_packages_dedupe_source AS packages_packages ON packages_packages.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.plan.issues": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT issues.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE issues.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.plan.notes": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT notes.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_notes_dedupe_source AS notes  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = notes.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE notes.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.plan.projects": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.plan.todos": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT todos.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_todos_dedupe_source AS todos  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = todos.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE todos.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.plan.service_desk_enabled_projects": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.service_desk_enabled = TRUE AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.plan.service_desk_issues": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(issues.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source AS issues  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = issues.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE issues.author_id = 82 AND issues.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.plan.projects_jira_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services ON services.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.type = 'JiraService' AND services.active = TRUE AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.plan.projects_jira_dvcs_cloud_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services ON services.project_id = projects.id INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_project_feature_usages_dedupe_source AS project_feature_usages ON project_feature_usages.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.type = 'JiraService' AND services.active = TRUE AND project_feature_usages.jira_dvcs_cloud_last_sync_at IS NOT NULL AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.plan.projects_jira_dvcs_server_active": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services ON services.project_id = projects.id INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_project_feature_usages_dedupe_source AS project_feature_usages ON project_feature_usages.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.type = 'JiraService' AND services.active = TRUE AND project_feature_usages.jira_dvcs_server_last_sync_at IS NOT NULL AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.plan.epics": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT epics.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_epics_dedupe_source AS epics  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = epics.group_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE epics.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.release.deployments": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT deployments.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_deployments_dedupe_source AS deployments  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = deployments.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE deployments.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.release.failed_deployments": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT deployments.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_deployments_dedupe_source AS deployments  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = deployments.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE deployments.status = 3 AND deployments.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.release.releases": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT releases.author_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_releases_dedupe_source AS releases  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = releases.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE releases.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.release.successful_deployments": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT deployments.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_deployments_dedupe_source AS deployments  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = deployments.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE deployments.status = 2 AND deployments.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.release.projects_mirrored_with_pipelines_enabled": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_project_features_dedupe_source AS project_features ON project_features.project_id = projects.id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE projects.mirror = TRUE AND projects.mirror_trigger_builds = TRUE AND project_features.builds_access_level = 20 AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.secure.user_preferences_group_overview_security_dashboard": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(users.id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_users_dedupe_source AS users  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (users.state IN ('active')) AND (users.user_type IS NULL OR users.user_type IN (NULL, 6, 4)) AND users.group_view = 2 AND users.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.secure.user_container_scanning_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'container_scanning' AND ci_builds.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.secure.user_dast_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'dast' AND ci_builds.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.secure.user_dependency_scanning_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'dependency_scanning' AND ci_builds.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.secure.user_license_management_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'license_management' AND ci_builds.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.secure.user_sast_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'sast' AND ci_builds.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.secure.user_secret_detection_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'secret_detection' AND ci_builds.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.secure.user_coverage_fuzzing_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'coverage_fuzzing' AND ci_builds.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.secure.user_api_fuzzing_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'apifuzzer_fuzz' AND ci_builds.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.secure.user_api_fuzzing_dnd_jobs": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name = 'apifuzzer_fuzz_dnd' AND ci_builds.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.secure.user_unique_users_all_secure_scanners": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.name IN ('container_scanning', 'dast', 'dependency_scanning', 'license_management', 'license_scanning', 'sast', 'secret_detection', 'coverage_fuzzing', 'apifuzzer_fuzz', 'apifuzzer_fuzz_dnd') AND ci_builds.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.verify.ci_builds": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_builds.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source AS ci_builds  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_builds.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_builds.type = 'Ci::Build' AND ci_builds.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.verify.ci_external_pipelines": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_pipelines.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source AS ci_pipelines  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipelines.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_pipelines.source = 6 AND ci_pipelines.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.verify.ci_internal_pipelines": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_pipelines.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source AS ci_pipelines  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipelines.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE (ci_pipelines.source IN (1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13) OR ci_pipelines.source IS NULL) AND ci_pipelines.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.verify.ci_pipeline_config_auto_devops": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_pipelines.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source AS ci_pipelines  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipelines.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_pipelines.config_source = 2 AND ci_pipelines.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.verify.ci_pipeline_config_repository": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_pipelines.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source AS ci_pipelines  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipelines.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_pipelines.config_source = 1 AND ci_pipelines.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.verify.ci_pipeline_schedules": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_pipeline_schedules.owner_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipeline_schedules_dedupe_source AS ci_pipeline_schedules  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipeline_schedules.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_pipeline_schedules.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.verify.ci_pipelines": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_pipelines.user_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source AS ci_pipelines  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_pipelines.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_pipelines.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.verify.ci_triggers": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT ci_triggers.owner_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_ci_triggers_dedupe_source AS ci_triggers  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects ON projects.id = ci_triggers.project_id  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON projects.namespace_id = namespaces.id LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE ci_triggers.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1", "usage_activity_by_stage_monthly.verify.projects_reporting_ci_cd_back_to_github": "SELECT namespaces_xf.namespace_id, TO_DATE(CURRENT_DATE) AS run_day,  COUNT(DISTINCT projects.creator_id) AS counter_value  FROM prep.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source AS projects INNER JOIN prep.gitlab_dotcom.gitlab_dotcom_services_dedupe_source AS services ON services.project_id = projects.id AND services.type = 'GithubService'  LEFT JOIN prep.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source AS namespaces ON namespaces.id = projects.namespace_id  LEFT JOIN prod.legacy.gitlab_dotcom_namespaces_xf AS namespaces_xf ON namespaces.id = namespaces_xf.namespace_id WHERE services.type = 'GithubService' AND services.pipeline_events = TRUE AND services.active = TRUE AND projects.created_at BETWEEN '2021-01-10 13:25:43.861906' AND '2021-02-07 13:25:43.861993' GROUP BY 1"}