# ======
# Project Details
# ======
name: 'gitlab_snowflake'
version: '1.0'
config-version: 2
profile: 'gitlab-snowflake'
require-dbt-version: 0.18.1


# ======
# File Path Configs
# ======
source-paths: ["models"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
target-path: "target"
clean-targets:
    - "target"
    - "dbt_modules"

# ======
# Snowflake Configs
# ======
quoting:
  database: true
  identifier: false
  schema: false
query-comment:
  comment: "{{ query_comment(node) }}"
  append: true

# ======
# Run Hooks
# ======
on-run-start:
    - "{{ resume_warehouse(var('resume_warehouse', false), var('warehouse_name')) }}"
    - "{{ create_udfs() }}"
    - "create schema if not exists \"{{generate_database_name(env_var('SNOWFLAKE_PREP_DATABASE'))}}\".snowplow_{{ var('year', run_started_at.strftime('%Y')) }}_{{ var('month', run_started_at.strftime('%m')) }}"

on-run-end:
    - "{{ grant_usage_to_schemas() }}"
    - "{{ suspend_warehouse(var('suspend_warehouse', false), var('warehouse_name')) }}"

# ======
# Seed Configs
# ======
seeds:
  +enabled: true
  +database: "{{ env_var('SNOWFLAKE_TRANSFORM_DATABASE') }}" #ANALYTICS
  +schema: legacy
  +quote_columns: False

  gitlab_snowflake:
    gitlab_release_schedule:
      +column_types:
        major_minor_version: varchar
  
  data_tests:
    +database: "{{ env_var('SNOWFLAKE_PREP_DATABASE') }}" #PREP
    +schema: tdf

# ==================
# Variable Configs
# ==================
vars:

  datasiren:
    'datasiren:sensorlist': ['datasiren_transform_db_email_column_name_sensor']

  warehouse_name: "{{ env_var('SNOWFLAKE_TRANSFORM_WAREHOUSE') }}"
  valid_at: '{{ run_started_at.strftime("%Y-%m-%d %H:%M:%S%z") }}'

  snowplow:pass_through_columns: ['glm_source','cf_formid','cf_elementid','cf_nodename','cf_type','cf_elementclasses','cf_value','sf_formid','sf_formclasses','sf_elements','ff_formid','ff_elementid','ff_nodename','ff_elementtype','ff_elementclasses','ff_value','lc_elementid','lc_elementclasses','lc_elementtarget','lc_targeturl','lc_elementcontent','tt_category','tt_variable','tt_timing','tt_label']
  snowplow:page_view_lookback_days: 7

  snowplow:
    'snowplow:use_fivetran_interface': false
    'snowplow:events': "{{ ref('snowplow_unnested_events') }}"
    'snowplow:context:web_page': "{{ ref('snowplow_web_page') }}"
    'snowplow:context:performance_timing': "{{ ref('snowplow_performance_timing_metrics') }}"
    'snowplow:context:useragent': false
    'snowplow:timezone': 'America/New_York'
    'snowplow:page_ping_frequency': 30
    'snowplow:app_ids': ['gitlab', 'about', 'gitlab_customers']

# ==================
# Model Configs
# ==================
models:
  +database: "{{ env_var('SNOWFLAKE_TRANSFORM_DATABASE') }}" # ANALYTICS, redundant, but good to be explicit
  +schema: legacy  # Top level override since profiles defaults to PREP

  # ------------------
  # Snowplow Package https://hub.getdbt.com/fishtown-analytics/snowplow/latest/
  # ------------------
  snowplow:
    +database: "{{ env_var('SNOWFLAKE_PREP_DATABASE') }}" #PREP
    +schema: "snowplow_{{ var('year', run_started_at.strftime('%Y')) }}_{{ var('month', run_started_at.strftime('%m')) }}"
    +tags: ["product"]
    +incremental_strategy: "delete+insert"
    page_views:
      default:
        snowplow_web_events:
          +enabled: false

  # ------------------
  # Snowflake Spend Package https://gitlab.com/gitlab-data/snowflake_spend
  # ------------------
  snowflake_spend:
    +materialized: table

  datasiren:
    +full_refresh: false
    +database: "{{ env_var('SNOWFLAKE_PREP_DATABASE') }}" #PREP
    +schema: datasiren
    +tags: ["datasiren"]
    
  # ==================
  # GitLab Models
  # ==================
  gitlab_snowflake:
    +materialized: view

    # ------------------
    # Sources
    # ------------------
    sources:
      +database: "{{ env_var('SNOWFLAKE_PREP_DATABASE') }}" #PREP
      +tags: ["sources"]

      airflow:
        +materialized: table
        +schema: airflow

      customers:
        +schema: customers
        sensitive:
          +schema: sensitive
          secure: true

      datasiren:
        +schema: datasiren
        +tags: ["datasiren"]

      date:
        +materialized: table
        +schema: date

      dbt:
        +materialized: table
        +schema: dbt
        +tags: ["dbt"]

      engineering:
        +database: "{{ env_var('SNOWFLAKE_TRANSFORM_DATABASE') }}" # ANALYTICS
        +materialized: table

      gcp_billing:
        +materialized: table
        +schema: gcp_billing

      gitlab_data_yaml:
        +schema: gitlab_data_yaml

      gitlab_dotcom:
        +materialized: table
        +schema: gitlab_dotcom
      
      gitlab_ops:
        +materialized: table
        +schema: gitlab_ops

      google_analytics_360:
        +materialized: table
        +schema: google_analytics_360

      greenhouse:
        +schema: greenhouse

      handbook:
        +schema: handbook

      keyhole_twitter:
        +schema: keyhole_twitter
        +tags: ["keyhole_twitter", "social", "sources"]

      license:
        +schema: license_db

      netsuite:
        +schema: netsuite
        sensitive:
          +schema: sensitive
          secure: true

      pmg:
        +materialized: table
        +schema: pmg

      qualtrics:
        +materialized: table
        +schema: qualtrics

      rspec:
        +schema: rspec

      sfdc:
        +schema: sfdc
        sensitive:
          +schema: sensitive
          secure: true

      sheetload:
        +schema: sheetload

      snowflake:
        +schema: snowflake

      snowflake_imports:
        +schema: snowflake_imports

      snowplow:
        +tags: ["product"]
        +schema: snowplow

      version:
        +tags: ["product"]
        +materialized: table
        +schema: version_db

      zendesk:
        +schema: zendesk

      zendesk_community_relations:
        +schema: zendesk_community_relations

      zuora:
        +schema: zuora
        +tags: ["zuora"]

    # ------------------
    # Staging
    # ------------------
    staging:
      +materialized: table

      date:
        +materialized: view

      dbt:
        +schema: workspace_data
        +tags: ["dbt"]

      gitlab_dotcom:
        +tags: ["product"]
        sensitive:
          +database: "{{ env_var('SNOWFLAKE_PREP_DATABASE') }}" #PREP
          +materialized: view
          +schema: sensitive
        source_view:
          +materialized: view

      gitlab_ops:
        source_view:
          +materialized: view

      greenhouse:
        xf:
          +database: "{{ env_var('SNOWFLAKE_PREP_DATABASE') }}" #PREP
          +schema: sensitive
          secure: true

      keyhole_twitter:
        +tags: [ "keyhole_twitter", "social" ]

      license:
        +materialized: view

      snowflake:
        +materialized: view

      snowplow:
        +tags: ["product"]
        month_partition:
          +database: "{{ env_var('SNOWFLAKE_PREP_DATABASE') }}" #PREP
          +schema: "snowplow_{{ var('year', run_started_at.strftime('%Y')) }}_{{ var('month', run_started_at.strftime('%m')) }}"

      version:
        +tags: ["product"]

      trusted_data_framework:
        +tags: ["tdf"]


    # ------------------
    # Marts
    # ------------------
    marts:
      +materialized: table

      exports:
        +database: "{{ env_var('SNOWFLAKE_PREP_DATABASE') }}" #PREP
        +materialized: view
        +schema: exports

        users_emails:
          enabled: false

    # ------------------
    # Legacy Structure
    # ------------------
    bamboohr:
      +database: "{{ env_var('SNOWFLAKE_PREP_DATABASE') }}" #PREP
      +schema: sensitive
      secure: true
      base:
        +materialized: table
      rpt:
        +database: "{{ env_var('SNOWFLAKE_TRANSFORM_DATABASE') }}"


    covid19:
      +schema: covid19

    poc:
      +tags: ["poc"]
      +enabled: true
      +materialized: table

    retention:
      +materialized: table

    smau_events:
      +tags: ["product"]
      +materialized: table


    # ------------------
    # Trusted Data Framework
    # ------------------
    trusted_data_framework:
      +database: "{{ env_var('SNOWFLAKE_PREP_DATABASE') }}" #PREP
      +materialized: table
      +schema: tdf
      secure: true
      +tags: ["tdf"]


# ======
# Snapshot Configs
# ======
snapshots:
  gitlab_snowflake:
    target_database: "{{ env_var('SNOWFLAKE_SNAPSHOT_DATABASE') }}" #RAW in production
    target_schema: "snapshots"
    transient: false

    customers:
      +tags: ["daily", "customers_db"]

    gitlab_dotcom:
      +tags: ["daily"]

    license:
      +tags: ["daily", "license_db"]

    netsuite:
      +tags: ["daily"]

    sfdc:
      +tags: ["daily"]

    sheetload:
      +tags: ["daily"]

    zuora:
      +tags: ["daily", "zuora"]
